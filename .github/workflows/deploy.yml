name: Build and Deploy

on:
    push:
        branches:
            - main
    workflow_dispatch:


jobs:
    build-and-push-image:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                registry: docker.io
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Build and Push API Image
              uses: docker/build-push-action@v4
              with:
                context: .
                file: ./api/Dockerfile
                push: true
                tags: |
                  ${{ secrets.DOCKERHUB_USERNAME }}/linkconvert-api:latest
                  ${{ secrets.DOCKERHUB_USERNAME }}/linkconvert-api:${{ github.sha }}
                platforms: linux/amd64,linux/arm64

    deploy:
        runs-on: ubuntu-latest
        needs: 
            - build-and-push-image
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Create env file
              run: |
                echo "GIT_COMMIT_HASH=${{ github.sha }}" > ./envfile

            - name: Create Docker Secrets
              uses: appleboy/ssh-action@v0.1.7
              with:
                host: linkconvert.emilpopovic.me
                username: deploy
                key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
                port: 22
                script: |
                    #!/bin/bash
                    set -e
                    
                    create_secret() {
                    local secret_name=$1
                    local secret_value=$2
                    if ! docker secret ls --format '{{.Name}}' | grep -qw "$secret_name"; then
                        echo "$secret_value" | docker secret create "$secret_name" - 
                        echo "Secret $secret_name created."
                    else
                        echo "Secret $secret_name already exists."
                    fi
                    }

                    create_secret "spotify-client-id" "${{ secrets.SPOTIFY_CLIENT_ID }}"
                    create_secret "spotify-client-secret" "${{ secrets.SPOTIFY_CLIENT_SECRET }}"
                    create_secret "youtube-api-key" "${{ secrets.YOUTUBE_API_KEY }}"

            - name: Copy stack file to server
              uses: appleboy/scp-action@v0.1.5
              with:
                host: ${{ secrets.SERVER_HOST }}
                username: deploy
                key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
                source: "docker-stack.yaml,envfile"
                target: "/home/deploy/"

            - name: Deploy via SSH
              uses: appleboy/ssh-action@v0.1.7
              with:
                host: ${{ secrets.SERVER_HOST }}
                username: deploy
                key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
                script: |
                  echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
                  docker stack deploy -c /home/deploy/docker-stack.yaml --with-registry-auth linkconvert
